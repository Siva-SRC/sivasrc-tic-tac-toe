{"version":3,"sources":["components/board/Board.jsx","App.js","reportWebVitals.js","index.js"],"names":["Board","props","handleClick","index","state","result","stepCounter","boardArray","console","log","setState","PLAYER_TURN","playerTurn","BOARD_ARRAY","winningCombos","i","length","winningRow","p1","p2","p3","isFinished","handleCloseModal","window","location","reload","isOpen","className","this","map","data","onClick","style","border","width","height","fontSize","Modal","marginTop","show","Header","justifyContent","fontFamily","Body","textAlign","backgroundImage","backgroundSize","Footer","padding","margin","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70dc9873.chunk.js","sourcesContent":["import { Modal } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport \"./Board.css\";\n\nexport class Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerTurn: \"X\",\n      boardArray: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      result: \"\",\n      isFinished: false,\n      stepCounter: 1,\n      isOpen: true,\n    };\n  }\n\n  handleClick = (index) => {\n    if (\n      this.state.result === \"\" &&\n      this.state.stepCounter <= 9 &&\n      this.state.boardArray[index] === \"\"\n    ) {\n      console.log(\"inside if\");\n      this.setState({\n        stepCounter: this.state.stepCounter + 1,\n      });\n      let PLAYER_TURN = this.state.playerTurn;\n      let BOARD_ARRAY = this.state.boardArray;\n      console.log(PLAYER_TURN);\n      console.log(BOARD_ARRAY[index]);\n      console.log(index);\n      BOARD_ARRAY[index] = PLAYER_TURN;\n      let winningCombos = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n      ];\n\n      for (let i = 0; i < winningCombos.length; i++) {\n        let winningRow = winningCombos[i];\n        //   console.log(\"winning row \", winningRow);\n\n        let p1 = winningRow[0];\n        let p2 = winningRow[1];\n        let p3 = winningRow[2];\n        //   console.log(\"p1\", p1);\n\n        //   console.log(\"BOARD_ARRAY[p1] \", BOARD_ARRAY[p1]);\n        //   console.log(\"BOARD_ARRAY[p2] \", BOARD_ARRAY[p2]);\n        //   console.log(\"BOARD_ARRAY[p3] \", BOARD_ARRAY[p3]);\n\n        if (\n          BOARD_ARRAY[p1] !== \"\" &&\n          BOARD_ARRAY[p2] !== \"\" &&\n          BOARD_ARRAY[p3] !== \"\" &&\n          BOARD_ARRAY[p1] === BOARD_ARRAY[p2] &&\n          BOARD_ARRAY[p2] === BOARD_ARRAY[p3] &&\n          BOARD_ARRAY[p3] === BOARD_ARRAY[p1]\n        ) {\n          // if (PLAYER_TURN === \"X\") {\n          //   this.setState({\n          //     result: \"Player 1 Wins !!!\",\n          //     isFinished: true,\n          //   });\n          // }\n          // if (PLAYER_TURN === \"O\") {\n          //   this.setState({\n          //     result: \"Player 2 Wins !!!\",\n          //     isFinished: false,\n          //   });\n          // }\n          // console.log(`Winner is ${PLAYER_TURN}`);\n          this.setState({\n            result: `Winner is ${PLAYER_TURN}`,\n            isFinished: true,\n          });\n          break;\n        }\n      }\n      // console.warn(BOARD_ARRAY);\n\n      PLAYER_TURN = PLAYER_TURN === \"X\" ? \"O\" : \"X\";\n\n      this.setState({\n        playerTurn: PLAYER_TURN,\n        boardArray: BOARD_ARRAY,\n      });\n    }\n    if (this.state.stepCounter == 9 && this.state.result == \"\") {\n      this.setState({\n        isFinished: true,\n        result: \"Oops , Out of moves !!!\",\n      });\n    }\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      isFinished: false,\n    });\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <div className=\"board\">\n        <p className=\"heading\">Tic Tac Toe</p>\n        {this.state.boardArray.map((data, index) => {\n          return (\n            <button\n              key={index}\n              onClick={() => this.handleClick(index)}\n              className=\"btn btn-danger\"\n              style={{\n                // border: \"1px solid lightgray\",\n                // border: \"1px solid black\",\n                border: \"white 1px solid\",\n                width: \"33.3%\",\n                height: \"10vh\",\n                fontSize: \"50px\",\n              }}\n            >\n              {data}\n            </button>\n          );\n        })}\n        <Modal\n          style={{\n            marginTop: \"23vh\",\n          }}\n          show={this.state.isFinished}\n        >\n          <Modal.Header style={{ justifyContent: \"center\" }}>\n            <p style={{ fontFamily: \"Anton, sans-serif\", fontSize: \"50px\" }}>\n              Result\n            </p>\n          </Modal.Header>\n          <Modal.Body\n            style={\n              this.state.result === \"Oops , Out of moves !!!\"\n                ? {\n                    textAlign: \"center\",\n                    fontSize: \"30px\",\n                  }\n                : {\n                    textAlign: \"center\",\n                    fontSize: \"30px\",\n                    backgroundImage: `url(\"https://media1.giphy.com/media/USOWFXIk9fyTllM0aV/source.gif\")`,\n                    backgroundSize: \"contain\",\n                  }\n            }\n          >\n            <br />\n            <br />\n            <p style={{ fontFamily: \"Anton, sans-serif\" }}>\n              {this.state.result}\n            </p>\n            <br />\n            <br />\n          </Modal.Body>\n          <Modal.Footer>\n            <button onClick={this.handleCloseModal} className=\"btn btn-primary\">\n              Restart\n            </button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          style={{\n            marginTop: \"23vh\",\n          }}\n          show={this.state.isOpen}\n        >\n          <Modal.Header\n            style={{\n              justifyContent: \"center\",\n            }}\n          >\n            <p\n              style={{\n                fontFamily: \"Anton, sans-serif\",\n                fontSize: \"50px\",\n              }}\n            >\n              Tic Tac Toe\n            </p>\n          </Modal.Header>\n          <Modal.Body\n            style={{\n              textAlign: \"center\",\n              fontSize: \"20px\",\n            }}\n          >\n            <br />\n            <p\n              style={{\n                padding: \"10px\",\n              }}\n            >\n              <strong>Player 1 : X</strong>\n            </p>\n            <p\n              style={{\n                padding: \"10px\",\n              }}\n            >\n              <strong>Player 2 : O</strong>\n            </p>\n            <br />\n          </Modal.Body>\n          <Modal.Footer>\n            <button\n              onClick={() =>\n                this.setState({\n                  isOpen: false,\n                })\n              }\n              className=\"btn btn-success\"\n              style={{\n                width: \"40%\",\n                margin: \"auto\",\n              }}\n            >\n              Start Game\n            </button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import \"./App.css\";\nimport Board from \"./components/board/Board\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}